<?xml version="1.0" encoding="UTF-8"?>
<project name="module-phpmyadmin" basedir=".">

  <dirname property="project.basedir" file="${ant.file.module-phpmyadmin}"/>
  <property name="root.dir" location="${project.basedir}/.."/>
  <property name="build.properties" value="${project.basedir}/build.properties"/>
  <property file="${build.properties}"/>

  <!-- Bearsampp dev -->
  <property name="dev.path" location="${root.dir}/dev"/>
  <fail unless="dev.path" message="Project 'dev' not found in ${dev.path}"/>
  <echo message="Bearsampp dev found in ${dev.path}" level="debug"/>

  <!-- Import build-commons.xml -->
  <import file="${dev.path}/build/build-commons.xml"/>
  <!-- Import build-bundle.xml -->
  <import file="${dev.path}/build/build-bundle.xml"/>

  <target name="release.build">
    <basename property="bundle.folder" file="${bundle.path}"/>
    <replaceproperty src="bundle.folder" dest="bundle.version" replace="${bundle.name}" with=""/>

    <delete dir="${bundle.tmp.prep.path}/${bundle.folder}"/>
    <mkdir dir="${bundle.tmp.prep.path}/${bundle.folder}"/>

    <if>
      <matches string="${bundle.version}" pattern="^4p"/>
      <then>
        <foreach target="phpmyadmin.dl" param="phpmyadmin.version" inheritall="true">
          <path><dirset dir="${bundle.path}" includes="*"/></path>
        </foreach>
      </then>
      <else>
        <antcall target="phpmyadmin.dl">
          <param name="phpmyadmin.version" value="${bundle.version}"/>
          <param name="phpmyadmin.single" value="true"/>
        </antcall>
      </else>
    </if>

    <copy todir="${bundle.tmp.prep.path}/${bundle.folder}" overwrite="true">
      <fileset dir="${bundle.path}" defaultexcludes="yes"/>
    </copy>
  </target>

  <target name="phpmyadmin.dl">
    <var name="phpmyadmin.version2" unset="true"/>
    <if>
      <istrue value="${phpmyadmin.single}"/>
      <then>
        <property name="phpmyadmin.version2" value="${phpmyadmin.version}"/>
      </then>
      <else>
        <basename property="phpmyadmin.version2" file="${phpmyadmin.version}"/>
      </else>
    </if>

    <getmoduleuntouched name="${bundle.name}" version="${phpmyadmin.version2}" propSrcDest="bundle.srcdest" propSrcFilename="bundle.srcfilename"/>

    <propertyregex property="bundle.srcbasename" input="${bundle.srcfilename}" regexp="(.*)\.(.*)" select="\1"/>
    <assertfile file="${bundle.srcdest}/${bundle.srcbasename}/config.sample.inc.php"/>

    <if>
      <istrue value="${phpmyadmin.single}"/>
      <then>
        <copy todir="${bundle.tmp.prep.path}/${bundle.folder}">
          <fileset dir="${bundle.srcdest}/${bundle.srcbasename}" excludes="
            config.sample.inc.php"
          />
        </copy>
      </then>
      <else>
        <copy todir="${bundle.tmp.prep.path}/${bundle.folder}/${phpmyadmin.version2}">
          <fileset dir="${bundle.srcdest}/${bundle.srcbasename}" excludes="
            config.sample.inc.php"
          />
        </copy>
      </else>
    </if>
  </target>

</project>
